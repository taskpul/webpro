// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../src/app/[countryCode]/(checkout)/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/checkout">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(checkout)/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/@dashboard/addresses/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/account/addresses">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/@dashboard/addresses/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/@dashboard/orders/details/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/account/orders/details/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/@dashboard/orders/details/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/@dashboard/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/account/orders">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/@dashboard/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/@dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/account">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/@dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/@dashboard/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/account/profile">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/@dashboard/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/@login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/account">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/@login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/cart/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/cart">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/cart/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/categories/[...category]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/categories/[...category]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/categories/[...category]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/collections/[handle]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/collections/[handle]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/collections/[handle]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/order/[id]/confirmed/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/order/[id]/confirmed">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/order/[id]/confirmed/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/order/[id]/transfer/[token]/accept/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/order/[id]/transfer/[token]/accept">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/order/[id]/transfer/[token]/accept/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/order/[id]/transfer/[token]/decline/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/order/[id]/transfer/[token]/decline">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/order/[id]/transfer/[token]/decline/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/order/[id]/transfer/[token]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/order/[id]/transfer/[token]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/order/[id]/transfer/[token]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/products/[handle]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/products/[handle]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/products/[handle]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/store/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[countryCode]/store">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/store/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../src/app/[countryCode]/(checkout)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/[countryCode]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(checkout)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/account/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/[countryCode]/account">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/account/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/[countryCode]/(main)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/[countryCode]">> = Specific
  const handler = {} as typeof import("../../src/app/[countryCode]/(main)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
