// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/[countryCode]" | "/[countryCode]/account" | "/[countryCode]/account/addresses" | "/[countryCode]/account/orders" | "/[countryCode]/account/orders/details/[id]" | "/[countryCode]/account/profile" | "/[countryCode]/cart" | "/[countryCode]/categories/[...category]" | "/[countryCode]/checkout" | "/[countryCode]/collections/[handle]" | "/[countryCode]/order/[id]/confirmed" | "/[countryCode]/order/[id]/transfer/[token]" | "/[countryCode]/order/[id]/transfer/[token]/accept" | "/[countryCode]/order/[id]/transfer/[token]/decline" | "/[countryCode]/products/[handle]" | "/[countryCode]/store"
type PageRoutes = never
type LayoutRoutes = "/" | "/[countryCode]" | "/[countryCode]/account"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/[countryCode]": { "countryCode": string; }
  "/[countryCode]/account": { "countryCode": string; }
  "/[countryCode]/account/addresses": { "countryCode": string; }
  "/[countryCode]/account/orders": { "countryCode": string; }
  "/[countryCode]/account/orders/details/[id]": { "countryCode": string; "id": string; }
  "/[countryCode]/account/profile": { "countryCode": string; }
  "/[countryCode]/cart": { "countryCode": string; }
  "/[countryCode]/categories/[...category]": { "countryCode": string; "category": string[]; }
  "/[countryCode]/checkout": { "countryCode": string; }
  "/[countryCode]/collections/[handle]": { "countryCode": string; "handle": string; }
  "/[countryCode]/order/[id]/confirmed": { "countryCode": string; "id": string; }
  "/[countryCode]/order/[id]/transfer/[token]": { "countryCode": string; "id": string; "token": string; }
  "/[countryCode]/order/[id]/transfer/[token]/accept": { "countryCode": string; "id": string; "token": string; }
  "/[countryCode]/order/[id]/transfer/[token]/decline": { "countryCode": string; "id": string; "token": string; }
  "/[countryCode]/products/[handle]": { "countryCode": string; "handle": string; }
  "/[countryCode]/store": { "countryCode": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/[countryCode]": never
  "/[countryCode]/account": "dashboard" | "login"
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
